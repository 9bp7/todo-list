!function(e){var t={};function o(a){if(t[a])return t[a].exports;var n=t[a]={i:a,l:!1,exports:{}};return e[a].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,a){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(o.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(a,n,function(t){return e[t]}.bind(null,n));return a},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";o.r(t);const a=(e,t=!1)=>{let o=[];return{addTask:e=>o.push(e),getTask:e=>o[e],getTasks:()=>o,getTitle:()=>e,deleteTask:e=>{const t=o.indexOf(e);t>-1&&o.splice(t,1)},isFavourite:()=>t}},n=(()=>{let e=[];return{addProject:t=>e.push(t),deleteProject:t=>{const o=e.indexOf(t);o>-1&&e.splice(o,1)},getAllProjects:()=>e,getProject:t=>e[t],getProjectCount:()=>e.length,getProjectIndex:t=>e.indexOf(t)}})(),l=(()=>{let e=[];return{addModal:t=>(e.push(t),e.indexOf(t)),getModalIndex:t=>e.indexOf(t),hideAllOtherModals:t=>{for(let o=0;o<t.length;o++)o!==t?(e[o].hide(),console.log("hiding modalID: "+o)):console.log("keeping modalID: "+o)}}})(),d=e=>{let t=document.createElement("div");t.classList.add("modal"),t.dataset.modalid=l.addModal(t);const o=l.getModalIndex(t);let a=document.createElement("div");a.classList.add("modal-container"),a.dataset.modalid=o,a.appendChild(t),e.length>0&&(t.innerHTML+=`<h3 id="modal-title">${e}</h3>`);const n=()=>{a.classList.remove("show"),t.classList.remove("show"),a.remove()};t.innerHTML+='<h3 id="modal-close">✕</h3>',a.addEventListener("click",e=>{(e.target.classList.contains("modal-container")||"modal-close"===e.target.id)&&n()});return{modal:t,show:()=>{a.classList.add("show"),t.classList.add("show"),document.querySelector("body").appendChild(a)},hide:n}},r=(e,t,o,a,n,l,r=!1)=>{const i=d(e);t.length>0&&(i.modal.innerHTML+=`<p>${t}</p>`),r?(i.modal.innerHTML+=`<button data-modalbtn="confirm" class="modal-btn modal-confirm-btn-warn">${n}</button>`,i.modal.innerHTML+=`<button data-modalbtn="cancel" class="modal-btn modal-cancel-btn-warn">${l}</button>`):(i.modal.innerHTML+=`<button data-modalbtn="confirm" class="modal-btn modal-confirm-btn">${n}</button>`,i.modal.innerHTML+=`<button data-modalbtn="cancel" class="modal-btn modal-cancel-btn">${l}</button>`);(()=>{let e=i.modal.querySelector('button[data-modalbtn="confirm"]'),t=i.modal.querySelector('button[data-modalbtn="cancel"]');e.addEventListener("click",()=>{o(),i.hide()}),t.addEventListener("click",()=>{null!==a&&a(),i.hide()})})();return Object.assign({},i,{})},i=(e,t,o,a,n)=>{const l=d(e);let r='<form autocomplete="off">';r+=`<input type="submit" data-modalbtn="submit" class="modal-btn modal-confirm-btn" value="${a}">`,n.length>0&&(r+=`<button data-modalbtn="cancel" class="modal-btn modal-cancel-btn">${n}</button>`),r+="</form>",l.modal.innerHTML+=r;const i=()=>{let e=l.modal.querySelector("form");if(e&&e.addEventListener("submit",o=>{o.preventDefault();let a=new FormData(e);t(a)}),n.length>0){l.modal.querySelector('button[data-modalbtn="cancel"]').addEventListener("click",()=>{null!==o&&o(),l.hide()})}};return i(),Object.assign({},l,{show:()=>{l.show(),l.modal.querySelector("input").focus()},addFormHTML:e=>{let t=l.modal.querySelector("form");t.remove(),l.modal.innerHTML+=r,t=l.modal.querySelector("form"),t.innerHTML=e+t.innerHTML,i()},addErrorLabel:(e,t)=>{let o=l.modal.querySelector("form");if(!o.querySelector(`p[data-error="${t}"]`)){let a=o.querySelector("#"+t),n=document.createElement("p");n.classList.add("modal-error"),n.dataset.error=t,n.textContent=e,o.insertBefore(n,a.nextSibling)}},removeErrorLabel:e=>{let t=l.modal.querySelector(`p[data-error="${e}"]`);t&&t.remove()}})},s=(()=>{document.querySelectorAll("button");let e,t,o,l=document.querySelector("aside"),d=document.querySelector(".sidebar-favourites"),c=document.querySelector(".sidebar-projects"),u=document.querySelector(".display-inner"),m=[],p=!1,y={type:"",projects:[]},f=0,b=0,g=0;const k=(e,t)=>{y.type=e,y.projects=t};t=i("New Task",o=>{let a=!1,l={};for(let e of o.entries())"modifytask-name"===e[0]&&(0===e[1].length?(t.addErrorLabel("You need to enter a task name!",e[0]),a=!0):t.removeErrorLabel(e[0])),l[e[0]]=e[1];if(!a){let o=n.getProject(f),a=((e,t,o,a,n,l)=>{let d=!1,r=null;const i=Date.now();return{setComplete:e=>{d=e,e&&(r=Date.now())},getComplete:()=>d,getCompletionDate:()=>r,getCreationDate:()=>i,setTitle:t=>e=t,setDescription:e=>t=e,setDueDate:e=>o=e,setPriority:e=>a=e,setNotes:e=>n=e,setChecklist:e=>l=e,getTitle:()=>e,getDescription:()=>t,getDueDate:()=>o,getPriority:()=>a,getNotes:()=>n,getChecklist:()=>l}})(l["modifytask-name"],l["modifytask-desc"],l["modifytask-duedate"],l["modifytask-priority"],l["modifytask-notes"],null);o.addTask(a),e(),t.hide()}},null,"Add Task","Cancel");const h=()=>{u.querySelectorAll('button[data-btn="new-task"]').forEach(e=>{e.addEventListener("click",()=>{f=e.dataset.projectid,t.addFormHTML('<input type="text" id="modifytask-name" name="modifytask-name" placeholder="Task name" tabindex="0">\n    <input type="text" id="modifytask-desc" name="modifytask-desc" placeholder="Description"> \n    <label for="modifytask-duedate">Due date (optional):</label>   \n    <input type="date" id="modifytask-duedate" name="modifytask-duedate">\n    <label for="modifytask-duedate">Priority:</label>   \n    <select id="modifytask-priority" name="modifytask-priority">\n      <option value="low">Low</option>\n      <option value="med">Medium</option>\n      <option value="high">High</option>\n    </select>\n    <textarea id="modifytask-notes" name="modifytask-notes" rows="3" placeholder="Add additional notes here"></textarea>'),t.show()})})};o=i("Edit Task",t=>{let a=!1,l={};for(let e of t.entries())"modifytask-name"===e[0]&&(0===e[1].length?(o.addErrorLabel("You need to enter a task name!",e[0]),a=!0):o.removeErrorLabel(e[0])),l[e[0]]=e[1];if(!a){let t=n.getProject(b).getTask(g);t.setTitle(l["modifytask-name"]),t.setDescription(l["modifytask-desc"]),t.setDueDate(l["modifytask-duedate"]),t.setPriority(l["modifytask-priority"]),t.setNotes(l["modifytask-notes"]),e(),o.hide()}},null,"Edit Task","Cancel");const j=()=>{document.querySelectorAll("li").forEach(e=>{e.querySelector('span[data-btn="edit-task"]')&&e.querySelector('span[data-btn="edit-task"]').addEventListener("click",()=>{b=+e.dataset.projectid,g=+e.dataset.projectindex;let t=n.getProject(b).getTask(g),a=t.getPriority(),l=`<input type="text" id="modifytask-name" name="modifytask-name" placeholder="Task name" value="${t.getTitle()}" tabindex="0">\n              <input type="text" id="modifytask-desc" name="modifytask-desc" value="${t.getDescription()}" placeholder="Description"> \n              <label for="modifytask-duedate">Due date (optional):</label>   \n              <input type="date" id="modifytask-duedate" value="${t.getDueDate()}" name="modifytask-duedate">\n              <label for="modifytask-duedate">Priority:</label>   \n              <select id="modifytask-priority" name="modifytask-priority">\n                <option value="low" ${"low"===a?"selected":""}>Low</option>\n                <option value="med" ${"med"===a?"selected":""}>Medium</option>\n                <option value="high" ${"high"===a?"selected":""}>High</option>\n              </select>\n              <textarea id="modifytask-notes" name="modifytask-notes" rows="3" placeholder="Add additional notes here">${t.getNotes()}</textarea>`;o.addFormHTML(l),o.show()})})},T=()=>{document.querySelectorAll("li").forEach(t=>{t.querySelector('span[data-btn="del-task"]')&&t.querySelector('span[data-btn="del-task"]').addEventListener("click",()=>{let o=n.getProject(+t.dataset.projectid),a=o.getTask(+t.dataset.projectindex);r("Delete Task",`Do you really wish to permanently delete task '${a.getTitle()}'?`,()=>((t,o)=>{t.deleteTask(o),e()})(o,a),null,"Delete Task","Cancel",!0).show()})})},L=()=>{u.innerHTML=""},v=e=>{let t=n.getProject(e);t.isFavourite()?u.innerHTML+=`<h3>${t.getTitle()}<button class="add-btn small-btn" data-btn="new-task" data-projectid=${e}>＋ Add Task</button></h3>`:u.innerHTML+=`<h3>${t.getTitle()}<button class="add-btn small-btn" data-btn="new-task" data-projectid=${e}>＋ Add Task</button><button class="add-btn delete-project-btn small-btn" data-btn="del-project" data-projectid=${e}>Delete Project</button></h3>`;let o=document.createElement("ul"),a=t.getTasks();a.sort((function(e,t){return e.getComplete()===t.getComplete()?0:e.getComplete()?1:-1}));for(let t=0;t<a.length;t++){let n=document.createElement("li");n.dataset.projectindex=t,n.dataset.projectid=e,a[t].getComplete()&&n.classList.add("todo-complete"),n.innerHTML+=`<input class="todo-tick" type="checkbox" ${a[t].getComplete()?"checked":""}><span class="todo-pri-${a[t].getPriority()}">${a[t].getTitle()}</span>`,a[t].getComplete()||(""!==a[t].getDescription()&&(n.innerHTML+=`<p class="todo-desc">${a[t].getDescription()}</p>`),""!==a[t].getDueDate()&&null!==a[t].getDueDate()&&(n.innerHTML+=`<p class="todo-desc">Due on ${a[t].getDueDate()}</p>`)),n.innerHTML+='<p class="todo-editdel"><span class="todo-edit" data-btn="edit-task">Edit</span> <span class="todo-del" data-btn="del-task">Delete</span></p>',o.appendChild(n)}u.appendChild(o),M()},P=e=>{L(),k("one",[n.getProject(e)]),v(e),x(),E(),h(),j(),T()},D=()=>{L(),k("all",n.getAllProjects());for(let e=0;e<n.getProjectCount();e++)v(e);x(),E(),h(),j(),T()};e=()=>{console.log("updating display"),"all"===y.type?D():"one"===y.type&&P(n.getProjectIndex(y.projects[0]))};const x=()=>{u.querySelectorAll("li").forEach(t=>{t.childNodes.forEach(o=>{"INPUT"===o.tagName&&"checkbox"===o.type&&(-1===m.indexOf(o)?(m.push(o),o.addEventListener("CheckboxStateChange",()=>{console.log("toggling completion task id "+t.dataset.projectindex),n.getProject(t.dataset.projectid).getTask(t.dataset.projectindex).setComplete(o.checked),e()})):console.log("event exists for "+t.textContent))})})},S=(document.querySelectorAll('button[data-btn="new-project"]').forEach(e=>{e.addEventListener("click",()=>{p=!p,M(!1),p&&(document.querySelector(".add-project-field").focus(),S())})}),()=>{let e=document.querySelector(".add-project-form"),t=document.querySelector(".add-project-field");e.addEventListener("submit",e=>{if(e.preventDefault(),""!==t.value){let e=a(t.value);n.addProject(e),p=!1,s.displayOneProject(n.getProjectIndex(e)),M()}})}),M=(e=!0)=>{d.innerHTML="",c.innerHTML="",(()=>{let e=n.getAllProjects(),t=document.querySelectorAll('button[data-btn="new-project"]'),o=0;e.forEach(e=>{e.isFavourite()?d.innerHTML+=`<li class="project-link" data-id=${o}>${e.getTitle()}</li>`:c.innerHTML+=`<li class="project-link" data-id=${o}>${e.getTitle()}</li>`,o++}),d.innerHTML+='<li class="project-link" data-id="all-tasks">All Tasks</li>',p?(t.forEach(e=>e.innerHTML="<span class='btn-symbol'>✕</span> Cancel"),c.innerHTML+='<div class="add-project"><form class="add-project-form"><input type="text" class="add-project-field" placeholder="Name your project"><input type="submit" class="add-project-submit" value="＋"></form></div>'):t.forEach(e=>e.innerHTML="<span class='btn-symbol'>＋</span> New Project")})(),(()=>{if("all"===y.type){d.querySelector('li[data-id="all-tasks"]').classList.add("selected")}else if("one"===y.type){let e=n.getProjectIndex(y.projects[0]);l.querySelector(`li[data-id="${e}"]`).classList.add("selected")}})(),l.querySelectorAll("li").forEach(e=>{e.addEventListener("click",()=>{"all-tasks"===e.dataset.id?s.displayAllProjects():s.displayOneProject(+e.dataset.id),p=!1,M()})})},E=()=>{u.querySelectorAll('button[data-btn="del-project"]').forEach(e=>{e.addEventListener("click",()=>{let t=n.getProject(+e.dataset.projectid);r("Delete "+t.getTitle(),`Do you really wish to permanently delete your project '${t.getTitle()}'?`,()=>(e=>{n.deleteProject(e),D(),M()})(t),null,"Delete Project","Cancel",!0).show()})})};return{displayOneProject:P,displayAllProjects:D}})();let c=a("Inbox",!0);n.addProject(c),c=a("Personal"),n.addProject(c),c=a("Work"),n.addProject(c),s.displayAllProjects()}]);