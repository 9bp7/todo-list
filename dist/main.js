!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const a=(e,t,n,a,r,l)=>({getTitle:()=>e,getDescription:()=>t,getDueDate:()=>n,getPriority:()=>a,getNotes:()=>r,getChecklist:()=>l}),r=(e,t=!1)=>{let n=[];return{addTask:e=>n.push(e),getTasks:()=>n,getTitle:()=>e,isFavourite:()=>t}},l=(()=>{let e=[];return{addProject:t=>e.push(t),getAllProjects:()=>e,getProject:t=>e[t]}})(),i=(e,t)=>{let n=document.createElement("div");n.classList.add("modal"),n.dataset.modalid=t,n.innerHTML+=`<h3>${e}</h3>`,document.querySelector("body").appendChild(n);const a=()=>{n.classList.remove("show")},r=()=>{document.querySelector("#modal-close").addEventListener("click",()=>{a()})};n.innerHTML+='<h3 id="modal-close">✕</h3>',r();return{show:(e=[])=>{((e=[])=>{for(let t=0;t<e;t++)e[t].hide(),console.log(e[t])})(e),n.classList.add("show"),r()},hide:a,focusFirstElement:()=>{n.querySelector("input").focus()}}},o=(e=>{const t=i("New Task",0);let n=document.querySelector('div[data-modalid="0"]');n.innerHTML+="<form></form>";let a=!1;const r=()=>{n.querySelector("form").innerHTML='<input type="text" id="newtask-name" name="newtask-name" placeholder="Task Name (e.g. eat cereals)" tabindex="0">\n      <input type="text" id="newtask-desc"name="newtask-desc" placeholder="Description">\n      <label for="newtask-addDueDateCheck" class="inlineblock">Add due date?</label>\n      <input type="checkbox" data-check="duedate" id="newtask-dueDateCheck" name="newtask-addDueDateCheck">\n      <input type="date" data-check="duedate" id="newtask-dueDate" class="hide" name="newtask-dueDate">\n      \n      <fieldset class="modal-priority">\n        <p class="inlineblock">Priority:</p>\n        <label for="newtask-lowPriority" class="inlineblock">Low</label>\n        <input type="radio" id="newtask-lowPriority" name="newtask-priority" checked>\n        <label for="newtask-medPriority" class="inlineblock">Medium</label>\n        <input type="radio" id="newtask-medPriority" name="newtask-priority">\n        <label for="newtask-highPriority" class="inlineblock">High</label>\n        <input type="radio" id="newtask-highPriority" name="newtask-priority">\n      </fieldset>\n      \n      <textarea id="newtask-notes" name="newtask-notes"\n                rows="3" placeholder="Add additional notes here"></textarea>\n      \n      <label for="newtask-addChecklistCheck"  class="inlineblock">Add checklist?</label>\n      <input type="checkbox" data-check="checklist" id="newtask-checklistCheck" name="newtask-addChecklistCheck">\n      <input type="text" data-check="checklist" id="newtask-checklist" class="hide" name="newtask-checklist">\n\n      <input type="submit" value="Add Task"></input>'},l=()=>n.querySelector("form");return r(),Object.assign({},t,{show:()=>{t.show(),t.focusFirstElement()},resetForm:r,getForm:l,getValue:e=>l().querySelector(`input[id="${e}"`).value,getAllValues:()=>{let e=l(),t={};return e.querySelectorAll("input").forEach(e=>{"checkbox"===e.getAttribute("type")||"radio"===e.getAttribute("type")?t[e.getAttribute("id")]=e.checked:t[e.getAttribute("id")]=e.value}),t},trackCheckBox:e=>{let t=l().querySelectorAll(`input[data-check="${e}"]`),n=null,a=[];t.forEach(e=>{"checkbox"===e.getAttribute("type")?n=e:a.push(e)}),n.addEventListener("CheckboxStateChange",()=>{a.forEach(e=>{n.checked?e.classList.remove("hide"):e.classList.add("hide")})})},trackSubmit:e=>{if(!a){let t=l();t.addEventListener("submit",e=>{e.preventDefault()}),t.addEventListener("submit",e),a=!0}},addErrorLabel:(e,t)=>{let n=l();if(n.querySelector(`p[data-error="${e}"]`));else{let a=n.querySelector("#"+e),r=document.createElement("p");r.classList.add("modal-error"),r.dataset.error=e,r.textContent=t,console.log("element pos: "+a),n.insertBefore(r,a.nextSibling)}}})})(),c=(()=>{let e=document.querySelectorAll("button"),t=document.querySelector(".sidebar-favourites"),n=document.querySelector(".sidebar-projects"),i=document.querySelector(".display-inner"),c=0,d=0;const s=()=>{e=document.querySelectorAll("button"),e.forEach(e=>{"new-task"===e.dataset.btn&&e.addEventListener("click",()=>{d=+e.dataset.projectid,o.resetForm(),o.show([void 0,void 0]),o.trackCheckBox("duedate"),o.trackCheckBox("checklist"),o.trackSubmit(()=>{(()=>{let e=o.getAllValues(),t=!1;if(""===e["newtask-name"]&&(o.addErrorLabel("newtask-name","You need to enter a name!"),t=!0),!t){let t="";t=e["newtask-lowPriority"]?"low":e["newtask-lowPriority"]?"med":"high";let n=a(e["newtask-name"],e["newtask-desc"],e["newtask-dueDate"],t,e["newtask-notes"],e["newtask-checklist"]);l.getProject(d).addTask(n),k(c),o.hide()}})()})})})},u=()=>{t.innerHTML="",n.innerHTML="";let e=0;l.getAllProjects().forEach(a=>{a.isFavourite()?t.innerHTML+=e===c?`<li class="project-link selected" data-id="${e}"> ${a.getTitle()}</li>`:`<li class="project-link" data-id="${e}"> ${a.getTitle()}</li>`:n.innerHTML+=e===c?`<li class="project-link selected" data-id="${e}"> ${a.getTitle()}</li>`:`<li class="project-link" data-id="${e}"> ${a.getTitle()}</li>`,e++}),document.querySelectorAll(".project-link").forEach(e=>{console.log(e),e.addEventListener("click",()=>{let t=e.dataset.id;k(t)})})},k=e=>{c=+e;let t=l.getProject(e);i.innerHTML=`<h3>${t.getTitle()} <button class="add-btn" data-btn="new-task" data-projectID="${e}">＋ Add Task</button></h3>`,i.innerHTML+="<ul>",t.getTasks().forEach(e=>{let t=document.createElement("li");t.innerHTML+='<input type="checkbox"> '+e.getTitle(),""!==e.getDescription()&&(t.innerHTML+=`<p class="todo-desc">${e.getDescription()}</p>`),""!==e.getDueDate()&&null!==e.getDueDate()&&(t.innerHTML+=`<p class="todo-desc">Due ${e.getDueDate()}</p>`),i.appendChild(t)}),i.innerHTML+="</ul>",u(),s()};return{trackNewProjectButtons:()=>{e.forEach(e=>{"new-project"===e.dataset.btn&&e.addEventListener("click",()=>{let e="";do{e=prompt("Name of project: ")}while(""===e||null===e);let t=r(e);l.addProject(t),u()})})},updateSideBar:u,displayProject:k}})();let d=r("Inbox",!0);l.addProject(d);let s=a("Test","More info about the test",null,null,null,null);d.addTask(s),c.displayProject(0),d=r("Personal"),l.addProject(d),d=r("Work"),l.addProject(d),c.updateSideBar(),c.trackNewProjectButtons()}]);